---
:id: 1s1UlhAhkAwwewk20ugYsW
:_meta:
  :content_type_id: academy
  :updated_at: '2018-12-14T18:50:21+00:00'
  :created_at: '2018-10-01T17:31:07+00:00'
  :id: 1s1UlhAhkAwwewk20ugYsW
:title: AWS RDS Guide - How to configure RDS to comply with HIPAA and HITRUST
:slug: aws-rds-guide-how-to-configure-rds-to-comply-with-hipaa-and-hitrust
:pub_date: !ruby/object:DateTime 2018-10-02 00:00:00.000000000 Z
:author:
  :id: 2B98PdoITGQAYwcWk2muY4
  :_meta:
    :content_type_id: person
    :updated_at: '2018-03-23T17:46:35+00:00'
    :created_at: '2016-11-23T22:06:24+00:00'
    :id: 2B98PdoITGQAYwcWk2muY4
  :fullname: Ryan Rich
  :slug: ryan-rich
  :person_type: Datica Executives
  :sort_weight: 6
  :role: Chief Product Officer
  :profile_pic:
    :id: 3GcDOA2BOMoSYCGwuEMcqI
  :email: ryan@datica.com
  :bio_short: 'Ryan hails from the agency world, where in Washington D.C. he worked
    with some of the greatest global brands including Audi, Volkswagen and Ducati.  '
  :bio: |-
    Before that, he co-founded an edTech startup in Rochester, NY, which helped public schools save time and money by replacing archaic grading machines with standard printers. His application leveraged optical character recognition technology to standardize and grade multiple choice tests.

    Ryan studied design and engineering at R.I.T. where he focused his education on building usable, accessible software. Originally from the corn fields of Upstate New York, he now resides in Portland, OR.
  :profile_twitter: _ryanSrich
  :location:
    :lat: 45.5230622
    :lon: -122.67648159999999
:summary: This guide is intended to give developers an easy to understand, step by
  step runbook for configuring their AWS RDS instance to be HITRUST CSF ready. In
  the following sections we’ll walk through the requirements, controls, and configurations
  for RDS.
:lead: This guide is intended to give developers an easy to understand, step by step
  runbook for configuring their AWS RDS instance to be HITRUST CSF ready. In the following
  sections we’ll walk through the requirements, controls, and configurations for RDS.
:post: |-
  _Disclaimer: while utilizing these guides can provide alignment with HITRUST, it is still your responsibility as an organization to complete an audit and obtain certification._

  ## Step 1: Ensuring you have a signed Business Associate Agreement (BAA)

  First and foremost, you’ll need a [BAA](https://datica.com/academy/business-associate-agreements/) in place with AWS before configuring any service (and subsequently accepting PHI). AWS maintains a list of services that are covered under their BAA [here](https://aws.amazon.com/compliance/hipaa-eligible-services-reference/) (RDS included). If you haven’t signed a BAA already with AWS, please see the steps below. If you already have a BAA with AWS, simply move on to step 2.

  More information on BAAs from AWS can be found [here](https://aws.amazon.com/blogs/security/introducing-the-self-service-business-associate-addendum/).

  <img class="lozad tofigure" alt="Setting up a BAA" src="//images.ctfassets.net/189dvqdsjh46/5WuZ9O1zMcCcy2YwIamSMg/80cfaebfaa4f32c41cf3f49fa5903949/rds-1.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/5WuZ9O1zMcCcy2YwIamSMg/80cfaebfaa4f32c41cf3f49fa5903949/rds-1.png?fm=png&fl=png8" />

  To sign the AWS BAA...

  1. Navigate to [https://console.aws.amazon.com/artifact/](https://console.aws.amazon.com/artifact/)
  2. Select the “AWS Business Associate Addendum” section
  3. Download the AWS Business Associate Addendum
  4. Confirm you’ve followed the steps properly by checking the three boxes show on the screen
  5. Click the button that says “Accept the AWS Business Associate Addendum for this account”
  6. You now have a BAA in place with AWS

  | Rule     | API Reference     |
  | ---------- | ---------- |
  | HIPAA &sect; 164.308       | N/A: AWS does not provide API access to their Artifact service       |

  ## Step 2: Selecting a database version

  Because AWS RDS offers various versions of each database, it’s imperative from a compliance and security perspective that you select a known good patched version, and one that will continue to receive updates and patches in the future (using versions no older than 3 previous versions is typically a safe bet).

  <img class="lozad tofigure content-screenshot" alt="RDS: Selecting a database version" src="//images.ctfassets.net/189dvqdsjh46/4r27J6VIEE4eAEIQ4KI4ky/63e34d3ae56d32fdc45f37a38e8f8293/rds-2.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/4r27J6VIEE4eAEIQ4KI4ky/63e34d3ae56d32fdc45f37a38e8f8293/rds-2.png?fm=png&fl=png8" />

  ## Step 3: Create new subnet group

  From AWS:

  > “Subnets are segments of a VPC's IP address range that you designate to group your resources based on security and operational needs. A DB subnet group is a collection of subnets (typically private) that you create in a VPC and that you then designate for your DB instances. A DB subnet group allows you to specify a particular VPC when creating DB instances using the CLI or API; if you use the console, you can just select the VPC and subnets you want to use.”

  How to create a new subnet group:

  1. Search for or choose “*RDS*” in the AWS console (or if you’re following along in this guide find the “*Subnet group*” link in the left side navigation).
  2. Select the “*Subnet group*” link if you haven’t already
  3. Select “*Create DB Subnet Group*”
  4. Complete the information for name and description
  5. Select your VPC and all subnets related to this VPC
  6. Select “*Create*”

  <img class="lozad tofigure" alt="Creating a new subnet group" src="//images.ctfassets.net/189dvqdsjh46/3xeX4ZhkPYysm2CuIIKEKi/eb3d15faec2fd9ec6866fded805e82f8/rds-3.gif?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/3xeX4ZhkPYysm2CuIIKEKi/eb3d15faec2fd9ec6866fded805e82f8/rds-3.gif" />

  | Related Rule     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0805.01m1 Organizational.12       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |

  ## Step 4: Enable multi-AZ

  When creating your new RDS instance, ensure you have selected “*Create replica in different zone*” as high availability and replication is critical to businesses handling PHI &mdash; you’ll also see in the table below the relevance to various required HITRUST controls.

  <img class="lozad tofigure content-screenshot" alt="Enabling multi-AZ" src="//images.ctfassets.net/189dvqdsjh46/3txkWTfv5CwqaKc4cEkKSC/dc3afde2ba3fc156537e72f833a8fbc3/rds-4.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/3txkWTfv5CwqaKc4cEkKSC/dc3afde2ba3fc156537e72f833a8fbc3/rds-4.png?fm=png&fl=png8" />

  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 1616.09l1 Organizational.16       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |
  | HITRUST 1618.09l1 Organizational.45       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |
  | HITRUST 1619.09l1 Organizational.7       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |
  | HITRUST 1620.09l1 Organizational.8       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |
  | HITRUST 1668.12d1 Organizational.67       | [DescribeDBSubnetGroups](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBSubnetGroups.html)       |

  ## Step 5: Create security group

  Communication should be limited to only the two VPC networks. No other access should be granted. To create a new Security group, [follow this guide from AWS](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#CreatingSecurityGroups).


  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0605.10h1 System.12       | [DescribeSecurityGroups](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html)       |
  | HITRUST 0630.10h2 System.6       | [DescribeSecurityGroups](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html)       |
  | HITRUST 0805.01m1 Organizational.12       | [DescribeSecurityGroups](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html)       |
  | HITRUST 0806.01m2 Organizational.12356       | [DescribeSecurityGroups](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html)       |

  ## Step 6: Turn off public access

  It should go without saying, but we’ll say it anyway: providing public, unauthorized, access to PHI (either directly or indirectly) is a violation of HIPAA, HITRUST, and several other regimes. Ensuring your RDS instance has public access turned off is critical.

  To turn off public access do the following:

  1. If you’re already in the RDS console and following along as you create a new instance, on Step 3 of creation, select “No” under the “Public accessibility” field <img class="lozad tofigure content-screenshot" alt="Disabling public access" src="//images.ctfassets.net/189dvqdsjh46/4tWBvDKdcIa22EAC00ikiM/ffe8a7e493def8508c402cfd7953f288/rds-5.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/4tWBvDKdcIa22EAC00ikiM/ffe8a7e493def8508c402cfd7953f288/rds-5.png?fm=png&fl=png8" />
  2. ...or if you have an instance already, simply click the “*Instances*” link in the left side navigation from the main RDS console
  3. Select the RDS instance you want
  4. Once you have the instance selected, click the “*Modify*” button on the top right
  5. Then scroll to the “*Network & Security*” security section — here you will find the “*Public accessibility*” option
  6. Select “*No*”

  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0605.10h1 System.12       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 0630.10h2 System.6       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 0805.01m1 Organizational.12       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 0806.01m2 Organizational.12356       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |

  ## Step 7: Enable encryption

  Encryption is perhaps the most important of all controls that need to be in place on your database instance(s).

  To enable encryption on an RDS instance, [follow this guide from AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html#Overview.Encryption.Enabling).

  <img class="lozad tofigure content-screenshot" alt="Enabling encryption" src="//images.ctfassets.net/189dvqdsjh46/5mnNkN0b5usYq86UsIgMUm/dab71a3d5b9b9789abf03cb289a29aa3/rds-6.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/5mnNkN0b5usYq86UsIgMUm/dab71a3d5b9b9789abf03cb289a29aa3/rds-6.png?fm=png&fl=png8" />


  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0903.10f1 Organizational.1       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1132.01v2 System.3       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1903.06d1 Organizational.3456711       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |

  ## Step 8: Working with backups

  From AWS:

  > “By default, Amazon RDS creates and saves automated backups of your DB instance securely in Amazon S3 for a user-specified retention period.”

  If you’ve already set up an RDS instance without specifying the backup period, AWS states:

  > “You can set the backup retention period when you create a DB instance. If you don't set the backup retention period, the default backup retention period is one day if you create the DB instance using the Amazon RDS API or the AWS CLI, or seven days if you create the DB instance using the AWS Console”

  To set the retention period when creating a new RDS instance, follow these steps:

  1. Navigate to your RDS console
  2. Select “*Instances*”
  3. Select “*Create database*”
  4. Go through the several steps, stop once you’re on the “*Configure advanced settings*” page
  5. Scroll to the “*Backup*” section and select your desired preferences

  <img class="lozad tofigure content-screenshot" alt="Configuring backup settings" src="//images.ctfassets.net/189dvqdsjh46/6i3g94kdZSiGiOIMwmYUUI/7394feea3da1c140f21c06536f0bad99/rds-7.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/6i3g94kdZSiGiOIMwmYUUI/7394feea3da1c140f21c06536f0bad99/rds-7.png?fm=png&fl=png8" />


  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 1616.09l1 Organizational.16       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1618.09l1 Organizational.45       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1619.09l1 Organizational.7       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1620.09l1 Organizational.8       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |
  | HITRUST 1668.12d1 Organizational.67       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html)       |

  ## Step 9: Patching schedule

  Managing vulnerabilities is a burden for users. Luckily, AWS provides maintenance as part of the RDS instance. In the “*Maintenance*” section on the “*Configure advanced settings*” step of creating an RDS instance, you’ll see two options:

  1. __Auto minor version upgrade__ &mdash; You should set this to “Enable auto minor version upgrade”
  2. __Maintenance window__ &mdash; For policy purposes, you’ll want/need to select a specific window. Recommendations on day and time will vary drastically depending on your location, business, and several other factors

  <img class="lozad tofigure content-screenshot" alt="Setting up a schedule" src="//images.ctfassets.net/189dvqdsjh46/Nq2e3iCIYUQQ4yYqE466S/5971449c0756f1cedeae67d3464b4770/rds-8.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/Nq2e3iCIYUQQ4yYqE466S/5971449c0756f1cedeae67d3464b4770/rds-8.png?fm=png&fl=png8" />


  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0701.07a1 Organizational.12       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |
  | HITRUST 0707.10b2 System.1       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |
  | HITRUST 0708.10b2 System.2       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |
  | HITRUST 0709.10m1 Organizational.1       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |
  | HITRUST 0720.07a1 Organizational.4       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |
  | HITRUST 0723.07a1 Organizational.8       | [GetMaintenanceWindow](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetMaintenanceWindow.html)       |

  ## Step 10: Working with SSL

  “Encrypting everything” is often the most difficult aspect of complying with frameworks like HITRUST CSF. Ensuring that your connections to RDS are encrypted is a fundamental requirement. The best way to enforce encryption for your RDS instance is to force all connections to use SSL.

  The steps required to enforcing SSL on your database will vary depending on your database of choice. For more information and step by step guides, see the following articles from AWS:

  - [MariaDB SSL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.SSLSupport)
  - [MySQL SSL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.SSLSupport)
  - [PostgreSQL SSL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.SSL)

  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 0805.01m1 Organizational.12       | N/A: No related API reference at this time       |
  | HITRUST 0806.01m2 Organizational.12356       | N/A: No related API reference at this time       |
  | HITRUST 0814.01n1 Organizational.12       | N/A: No related API reference at this time       |
  | HITRUST 0816.01w1 System.1       | N/A: No related API reference at this time       |
  | HITRUST 0835.09n1 Organizational.1       | N/A: No related API reference at this time       |
  | HITRUST 0859.09m1 Organizational.78       | N/A: No related API reference at this time       |

  ## Step 11: Audit Logging & Monitoring

  ### Monitoring

  Enhanced monitoring can be turned on for RDS at time of creation. On the “*Configure advanced settings*” step, find the “*Monitoring*” section and select “*Enable enhanced monitoring*”.

  <img class="lozad tofigure content-screenshot" alt="Enabling enhanced monitoring" src="//images.ctfassets.net/189dvqdsjh46/2wzKtvxtZya0Oi28kQ6m8S/50c2bdd4e0eec79bc0ad54b7073c7d8d/rds-9.png?fm=png&fl=png8&w=600" data-src="//images.ctfassets.net/189dvqdsjh46/2wzKtvxtZya0Oi28kQ6m8S/50c2bdd4e0eec79bc0ad54b7073c7d8d/rds-9.png?fm=png&fl=png8" />

  ### Logging

  From AWS:

  > “RDS PostgreSQL generates query and error logs. We write auto-vacuum info and rds_admin actions to the error log”

  AWS has several articles detailing how logging and monitoring work together to give you transparency into your instance. For more information, [see this guide from AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Monitoring.html).

  | Related Control(s)     | API Reference     |
  | ---------- | ---------- |
  | HITRUST 1204.09aa1 System.3       | [DBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html), [DescribeDBLogFiles](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBLogFiles.html)       |

  ## Wrapping up

  Using this guide, developers can ensure their new RDS instance is ready to comply with the HITRUST CSF. Maintaining these configurations for all new infrastructure, updating them for new versions of HITRUST and providing proof &mdash; a digital papertrail &mdash; is an incredible amount of work. Having a partner like Datica can mean the difference between an audit taking 4 months, or 4 weeks.

  For more information on Datica’s products and services. Check out these helpful links:

  - [Cloud Compliance Management System](https://datica.com/ccms)
  - [Compliant Kubernetes Service](https://datica.com/cks)
:featured_image:
  :title: Making RDS compliant
  :description: academy, articles
  :url: "//images.ctfassets.net/189dvqdsjh46/QuKh6opZkWK8isiySSuYA/a2c987e64a54d802f15e71e8c2cf25d6/Making_RDS_compliant.jpg"
  :_meta:
    :updated_at: '2018-12-14T19:05:22+00:00'
    :created_at: '2018-12-14T18:50:16+00:00'
    :id: QuKh6opZkWK8isiySSuYA
:related_guide:
  :id: v3Inn3xhHaskmq4ywwmkI
  :_meta:
    :content_type_id: guides
    :updated_at: '2018-08-17T20:05:55+00:00'
    :created_at: '2018-08-16T23:11:42+00:00'
    :id: v3Inn3xhHaskmq4ywwmkI
  :title: HIPAA / HITRUST Self Assessment Guide
  :slug: hipaa-hitrust-self-assessment-guide
  :summary: 'This lightweight self-assessment worksheet illuminates the cloud requirements
    of HIPAA that you need to plan for in your own digital health product. '
  :subhead: Are you sure your product is HIPAA compliant?
  :tags:
  - :id: 4PggcBjCXC4mo4OcuKWK2W
  - :id: 6wXXHIJfUsMg62Cuwquoa2
  - :id: 2gE9oPn2yUGEQEoGKEASUQ
  - :id: 1wY9bJEWnCwCyqcE2kCiuy
  - :id: 5fjEF8FoXmQQUAwgswSao8
  :desc: This HIPAA worksheet is meant to illuminate the cloud requirements of HIPAA
    that you need to plan for in your own digital health product.
  :authors:
  - :id: 3azwOe9v3O4YSuyU0gsuo6
  :guide_text: "What does \"HIPAA Compliant\" really mean? Frequently it is just a
    marketing label that some companies bestow upon themselves and not really an attestation
    of compliance. That's risky.\n\nThis worksheet is meant to illuminate the cloud
    requirements of HIPAA that you need to plan for in your own digital health product.
    A more comprehensive risk assessment, such as the HITRUST CSF Self-Assessment,
    is also necessary. Use this checklist to understand what compliance controls are
    needed, and assess your compliant state at several cloud layers:\n\n- __The Physical
    Layer__ \n- __The Operating System and Application Layers__ \n- __The Administrative
    Layer__\n\nOnce you've completed this checklist you'll have a much better understanding
    of what it will take to be HIPAA compliant in the cloud."
  :related_form:
    :id: 1Jp8dA5yw8ceCEuIy4csq6
  :form_id: 25a134fd-6903-40bf-acfd-7f5c6b478e92
  :icon: hipaa-hitrust-self-assessment-guide
  :bg_image:
    :id: 2ynfPi2vdaUWY6yAkGu4c2
  :image_thumb:
    :id: QFttAsn4qqmuw2oC628kI
  :share_image:
    :id: 3GFngpya9a2UqWKiwWosu
  :discovery_topic:
    :id: 3wVMp3VrJeiEaWs4wOi4K4
:related_entries:
- :id: 43dQoBKc9OuQuyw8k2SmKO
  :_meta:
    :content_type_id: academy
    :updated_at: '2018-10-04T18:06:34+00:00'
    :created_at: '2018-10-02T02:56:34+00:00'
    :id: 43dQoBKc9OuQuyw8k2SmKO
  :title: Azure Cosmos DB Guide - How to configure Cosmos DB to comply with HIPAA
    and HITRUST
  :slug: azure-cosmos-db-guide-how-to-configure-cosmos-db-to-comply-with-hipaa-and-hitrust
  :pub_date: !ruby/object:DateTime 2018-10-02 00:00:00.000000000 Z
  :author:
    :id: 2B98PdoITGQAYwcWk2muY4
  :summary: This guide is intended to give developers a simple way to configure their
    Cosmos DB service to be HITRUST CSF ready. In this guide we’ll walk through the
    requirements, controls, and configurations for Azure Cosmos DB.
  :lead: This guide is intended to give developers an easy to understand, step by
    step run book to configuring their Azure Cosmos DB instance to be HITRUST CSF
    ready. In the following sections we’ll walk through the requirements, controls,
    and configurations for Cosmos DB.
  :post: "_Disclaimer: while utilizing these guides can provide alignment with HITRUST,
    it is still your responsibility as an organization to complete an audit and obtain
    certification._\n\n## Step 1: The Business Associate Agreement (BAA)\n\nFrom Microsoft:\n\n>
    “To help customers comply with HIPAA and the HITECH Act, Microsoft includes execution
    of the HIPAA BAA as part of a customer’s volume licensing agreement, which includes
    any agreement that incorporates the Online Services Terms by reference. The BAA
    (full text of which is available at [http://aka.ms/BAA](http://aka.ms/BAA)) applies
    to a customer that is a “covered entity” or a “business associate” and includes
    \"protected health information\" in Customer Data. Microsoft currently offers
    the BAA for the services listed in the Scope section below.”\n\nMicrosoft does
    not provide programmatic access to their BAA (at least none that we could find).
    To double check that you do in fact have a BAA in place with Microsoft, it’s recommended
    that you reach out to your Azure rep (or Azure support if you do not have a rep).
    \n\nMore general tips on BAAs [here](https://datica.com/academy/business-associate-agreements/).
    \n\n| HIPAA Rule     | API Reference     |\n| ---------- | ---------- |\n| HIPAA
    &sect; 164.308       | N/A: Azure does not provide API access to the BAA       |\n\n##
    Step 2: Creating the database\n\nInside of the Azure portal, find the search bar
    and type “*Cosmos DB*”. Once the results populate, click the “*Azure Cosmos DB*”
    service in the list.\n\n<img class=\"lozad tofigure\" alt=\"Azure Cosmos DB service
    list\" src=\"//images.ctfassets.net/189dvqdsjh46/2DBCBDXJYM6CkuQG4WmSCU/47e457b5a970f90bfc4b969559d5a1d4/cosmos-1.png?fm=png&fl=png8&w=800\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/2DBCBDXJYM6CkuQG4WmSCU/47e457b5a970f90bfc4b969559d5a1d4/cosmos-1.png?fm=png&fl=png8\"
    />\n\nFor compliant services, it’s recommended that you create a new resource
    group, or, if you have other compliant services, that you keep them together.
    The rule of thumb here is that services touching PHI should be separate from services
    not touching PHI.\n\nOnce you’re inside the “*Create Azure Cosmos DB Account*”
    page, follow below:\n\n1. Select your subscription and associated resource group\n2.
    Give the instance a name (“*Account name*”)\n3. Select your API\n4. Select the
    location in which you want the service to live. It’s recommended that you keep
    it in the same location with the other services that will be interacting with
    it\n5. Ensure both “*Geo-Redundancy*” and “*Multi-region Writes*” are enabled\n6.
    Click “*Next: Network*”\n7. On the network tab, we can see that we have the option
    to create a network. Click the “*Create a new virtual network*” link. In the right
    sidebar, give your new network a name. We’ll also want to create a new subnet.
    Pick a name and IP address in CIDR notation.\n\n<img class=\"lozad tofigure\"
    alt=\"Networking options\" src=\"//images.ctfassets.net/189dvqdsjh46/2Z546yr0DYSAik6a0qgSAQ/b61c2dec992ad914897aa06f04e6ae69/cosmos-2.png?fm=png&fl=png8&w=800\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/2Z546yr0DYSAik6a0qgSAQ/b61c2dec992ad914897aa06f04e6ae69/cosmos-2.png?fm=png&fl=png8\"
    />\n\nFollow the rest of the steps for database setup and finish creation.\n\n<img
    class=\"lozad tofigure\" alt=\"Final setup steps\" src=\"//images.ctfassets.net/189dvqdsjh46/5gJCxn9ZcAgIEWMasKiiaC/7b00a8d9ea2f6372dc8b55f12b907453/cosmos-3.png?fm=png&fl=png8&w=800\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/5gJCxn9ZcAgIEWMasKiiaC/7b00a8d9ea2f6372dc8b55f12b907453/cosmos-3.png?fm=png&fl=png8\"
    />\n\n## Step 3: Networking\n\nIn Step 2 above we created a new VPC as well as
    a subnet. See the reference below to see how to check this via the Azure REST
    API and how it relates to HITRUST.\n\n| Related Control(s)     | API Reference
    \    |\n| ---------- | ---------- |\n| HITRUST 0805.01m1 Organizational.12       |
    [Subnets](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/subnets)       |\n\n##
    Step 4: Redundancy\n\nIn Step 2 above we created a database with several configurations.
    Two of those configurations were enabling both “*Geo-Redundancy*” and “*Multi-region
    Writes*”. To interact with these configurations, see the API reference below.\n\n|
    Related Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST
    1616.09l1 Organizational.16       | [Get a Database](https://docs.microsoft.com/en-us/rest/api/cosmos-db/get-a-database)
    \      |\n| HITRUST 1618.09l1 Organizational.45       | [Get a Database](https://docs.microsoft.com/en-us/rest/api/cosmos-db/get-a-database)
    \      |\n| HITRUST 1619.09l1 Organizational.7       | [Get a Database](https://docs.microsoft.com/en-us/rest/api/cosmos-db/get-a-database)
    \      |\n| HITRUST 1620.09l1 Organizational.8       | [Get a Database](https://docs.microsoft.com/en-us/rest/api/cosmos-db/get-a-database)
    \      |\n| HITRUST 1668.12d1 Organizational.67       | [Get a Database](https://docs.microsoft.com/en-us/rest/api/cosmos-db/get-a-database)
    \      |\n\n## Step 5: Access\n\nGating access to your database is imperative
    to achieving compliance. Cosmos DB supports a concept called “Service Endpoints”.
    From Azure:\n\n> “Virtual Network (VNet) service endpoints extend your virtual
    network private address space and the identity of your VNet to the Azure services,
    over a direct connection. Endpoints allow you to secure your critical Azure service
    resources to only your virtual networks. Traffic from your VNet to the Azure service
    always remains on the Microsoft Azure backbone network.”\n\nAzure provides a step
    by step guide to for securing access to an Azure Cosmos DB account by using Azure
    Virtual Network service endpoint, so instead of rehashing those steps here, you
    should follow that guide.\nThose settings, if done correctly, will ensure your
    database is only being accessed by approved services within your Azure account.\n\n|
    Related Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST
    0605.10h1 System.12       | [Security Rules](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/securityrules),
    [Public IP Addresses](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/publicipaddresses),
    [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n| HITRUST 0630.10h2 System.6       | [Security Rules](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/securityrules),
    [Public IP Addresses](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/publicipaddresses),
    [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n| HITRUST 0805.01m1 Organizational.12       | [Security Rules](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/securityrules),
    [Public IP Addresses](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/publicipaddresses),
    [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n| HITRUST 0806.01m2 Organizational.12356       | [Security Rules](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/securityrules),
    [Public IP Addresses](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/publicipaddresses),
    [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n\n## Step 6: Encryption\n\nFrom Azure:\n\n> “As a PaaS service, Cosmos
    DB is very easy to use. Because all user data stored in Cosmos DB is encrypted
    at rest and in transport, you don't have to take any action.”\n\nFor more information
    on how encryption at rest is implemented for Cosmos DB, [see this article](https://docs.microsoft.com/en-us/azure/cosmos-db/database-encryption-at-rest).\n\nEnsuring
    encryption is on everywhere:\n\nFor encryption and access not already covered
    in step 5, [see this guide](https://docs.microsoft.com/en-us/azure/cosmos-db/secure-access-to-data)
    from Azure on securing point access to your Cosmos DB instance.\n\n| Related Control(s)
    \    | API Reference     |\n| ---------- | ---------- |\n| HITRUST 0903.10f1 Organizational.1
    \      | Cosmos DB has encryption turned on by default; to turn on enctyption
    everywhere else: [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n| HITRUST 1132.01v2 System.3       | Cosmos DB has encryption turned
    on by default; to turn on enctyption everywhere else: [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n| HITRUST 1903.06d1 Organizational.3456711       | Cosmos DB has encryption
    turned on by default; to turn on enctyption everywhere else: [Virtual Networks](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/virtualnetworks),
    [Available Endpoint Services](https://docs.microsoft.com/en-us/rest/api/virtualnetwork/availableendpointservices)
    \      |\n\n## Step 7: Backups\n\nAzure provides automatic backups for Cosmos
    DB without the need to configure any settings. However, working with those backups,
    and attesting to their availability can be cumbersome. From Azure:\n\n> “All your
    backups are stored separately in another storage service, and those backups are
    globally replicated for resiliency against regional disasters. The automatic backups
    are intended for scenarios when you accidentally delete your Cosmos DB container
    and later require data recovery or a disaster recovery solution.”\n\n| Related
    Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST 1616.09l1
    Organizational.16       | N/A       |\n| HITRUST 1618.09l1 Organizational.45       |
    N/A       |\n| HITRUST 1619.09l1 Organizational.7       | N/A       |\n| HITRUST
    1620.09l1 Organizational.8       | N/A       |\n| HITRUST 1668.12d1 Organizational.67
    \      | N/A       |\n\n## Step 8: Logging & Monitoring\n\nInside of the Azure
    Cosmos DB portal, you’ll find a link in the left side navigation that reads “*Activity
    log*”, this is where you’ll see an audit log of various activity performed on
    the instance.\n\n<img class=\"lozad tofigure\" alt=\"Monitoring panel\" src=\"//images.ctfassets.net/189dvqdsjh46/1UkPX9b0QMY82AGIAe6OI/c4d0fbd685ba8b359b2cea86515a0dc7/cosmos-4.png?fm=png&fl=png8&w=800\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/1UkPX9b0QMY82AGIAe6OI/c4d0fbd685ba8b359b2cea86515a0dc7/cosmos-4.png?fm=png&fl=png8\"
    />\n\nMonitoring on the other hand has its own section, where you can see specific
    metrics about the instance, configure alerts, and run diagnostics.\n\n<img class=\"lozad
    tofigure\" alt=\"Cosmos DB diagnostics\" src=\"//images.ctfassets.net/189dvqdsjh46/3Xpjhm1FPi8EkkYuWAeYae/cf140a76f41a5c27dc853c5eb41d1b85/cosmos-5.png?fm=png&fl=png8&w=800\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/3Xpjhm1FPi8EkkYuWAeYae/cf140a76f41a5c27dc853c5eb41d1b85/cosmos-5.png?fm=png&fl=png8\"
    />\n\n| Related Control(s)     | API Reference     |\n| ---------- | ----------
    |\n| HITRUST 1204.09aa1 System.3       | [Monitoring REST API Reference](https://docs.microsoft.com/en-us/rest/api/monitor/)
    \      |\n\n## Wrapping up\n\nUsing this guide, developers can ensure their new
    Cosmos DB instance is ready to comply with the HITRUST CSF. Maintaining these
    configurations for all new infrastructure, updating them for new versions of HITRUST
    and providing proof — a digital papertrail — is an incredible amount of work.
    Having a partner like Datica can mean the difference between an audit taking 4
    months, or 4 weeks.\n\nFor more information on Datica’s products and services.
    Check out these helpful links:\n\n- [Cloud Compliance Management System](https://datica.com/ccms)\n-
    [Compliant Kubernetes Service](https://datica.com/cks)\n"
  :related_entries:
  - :id: 1s1UlhAhkAwwewk20ugYsW
  - :id: 4STmWUVa5WwkaWyi2UYG8U
  :discovery_topic:
    :id: 3wVMp3VrJeiEaWs4wOi4K4
  :cta_ref:
    :id: 6uKml5g9d60cQI2YswoqEE
- :id: 4STmWUVa5WwkaWyi2UYG8U
  :_meta:
    :content_type_id: academy
    :updated_at: '2018-10-02T19:32:39+00:00'
    :created_at: '2018-10-02T02:56:34+00:00'
    :id: 4STmWUVa5WwkaWyi2UYG8U
  :title: Google Cloud SQL Guide - How to configure GCP Cloud SQL to comply with HIPAA
    and HITRUST
  :slug: google-cloud-sql-guide-how-to-configure-gcp-cloud-sql-to-comply-with-hipaa
  :pub_date: !ruby/object:DateTime 2018-10-02 00:00:00.000000000 Z
  :author:
    :id: 2B98PdoITGQAYwcWk2muY4
  :summary: This guide helps developers configure their Google Cloud SQL instance
    to be HITRUST CSF ready. It covers requirements, controls, and configurations
    for GCP Cloud SQL.
  :lead: This guide is intended to give developers an easy to understand, step by
    step run book to configuring their Google Cloud SQL instance to be HITRUST CSF
    ready. In the following sections we’ll walk through the requirements, controls,
    and configurations for GCP Cloud SQL.
  :post: "_Disclaimer: while utilizing these guides can provide alignment with HITRUST,
    it is still your responsibility as an organization to complete an audit and obtain
    certification._\n\n## Step 1: The Business Associate Agreement (BAA)\n\nGoogle
    Cloud Platform requires users to contact their account manager to get a BAA signed.
    From Google: \n\n> \"Execute a Google Cloud BAA. You can request a BAA directly
    from your account manager.\"\n\nOnly once you’ve signed the BAA and subsequently
    configured your SQL database to be compliant should you start accepting PHI.\n\nMore
    on BAAs can be found in the [Datica Academy](https://datica.com/academy/).\n\n|
    Rule     | Header     |\n| ---------- | ---------- |\n| HIPAA &sect; 164.308       |
    N/A: GCP does not provide an API to the BAA       |\n\n## Step 2: Working with
    VPC networks\n\nBefore we jump into creating our SQL instance, first we’re going
    to create a new VPC and subnet. Creating a network and a subnet is very simple
    with GCP. Follow these steps.\n\n1. In the left side navigation find \"*VPC network*\"
    under the \"*Networking*\" heading\n2. Above the table of default networks, click
    the \"*Create VPC network*\" button\n3. Fill out the name, and description fields
    and then select \"*Subnet creation mode*\" under the \"*Subnets*\" section\n4.
    In the box titled \"*New subnet*\" fill out a name\n5. The region should be the
    same region as the database\n6. For the IP address range, you should use a standard
    private VPC network address range\n7. For \"*Private google access*\" which indicates:
    \" *...whether VMs in this subnet can access Google services without assigning
    external IP addresses* \" select \"*Off*\"\n8. Set flow logs to \"*On*\"\n9. Set
    \"Dynamic routing mode\" to \"*Regional*\"\n10. Click \"*Create*\"\n\n| Related
    Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST 0805.01m1
    Organizational.12       | [subnetworks](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks)
    , [networks](https://cloud.google.com/compute/docs/reference/rest/v1/networks)
    \      |\n\n## Step 3: Creating the database\n\nNow that we have a network and
    subnet, we can create our database. To do that, click the menu button in the top
    left and follow these steps:\n\n1. Select \"*SQL*\"\n2. At the following prompt,
    select \"*Create instance*\" <img class=\"lozad tofigure\" alt=\"Creating a Cloud
    SQL instance\" src=\"//images.ctfassets.net/189dvqdsjh46/6tB9ogqgPCGImsOC4wiEcW/edfe8828e0505dc5685e5597b4558d59/cloudsql-1.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/6tB9ogqgPCGImsOC4wiEcW/edfe8828e0505dc5685e5597b4558d59/cloudsql-1.png?fm=png&fl=png8\"
    />\n3. Make a selection for \"*MySQL*\" or \"*PostgreSQL*\" <img class=\"lozad
    tofigure\" alt=\"Choosing database type\" src=\"//images.ctfassets.net/189dvqdsjh46/6EVJDRf5D24UkwUK2q0eo8/43e673137e7b4d399e7bc9d2201e337a/cloudsql-2.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/6EVJDRf5D24UkwUK2q0eo8/43e673137e7b4d399e7bc9d2201e337a/cloudsql-2.png?fm=png&fl=png8\"
    />\n4. Enter the information for \"*Instance ID*\", \"*Default user password*\",
    \"*Location*\", \"*Region*\" and \"*Zone*\"\n5. Select the \"*Show configuration
    options*\" link\n6. Under \"*Set Connectivity*\" select \"*Private IP*\" (enable
    the API if you haven’t already)\n7. Under \"*Private IP*\" select the VPC we just
    created in the previous step <img class=\"lozad tofigure\" alt=\"Private IP decisions\"
    src=\"//images.ctfassets.net/189dvqdsjh46/31gvagB55eqEaM0uMUsSUu/9b57729fdf6152b6f5c1f5bdd126c623/cloudsql-3.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/31gvagB55eqEaM0uMUsSUu/9b57729fdf6152b6f5c1f5bdd126c623/cloudsql-3.png?fm=png&fl=png8\"
    />\n8. If \"*Public IP*\" is checked be sure to uncheck it\n9. In the \"*Enable
    auto backups and high availability*\" section, select \"*Automate backups*\" \n10.
    In the same section under \"*Availability*\" select \"*High availability (regional)*\"\n11.
    Next, under the \"*Set maintenance schedule*\" section be sure to select the window
    and timing that’s appropriate for your internal policy\n12. Then click \"*Create*\"\n\n##
    Step 4: High availability\n\nIn the previous step where we created our database,
    we were able to setup high availability across multiple regions. This aids in
    both disaster recovery and business continuity for your organization. If a region
    within GCP goes down, high availability will ensure that your data is still accessible
    from another region. \n\nFor more information on high availability from the GCP,
    see this [article](https://cloud.google.com/sql/docs/postgres/high-availability).\n\n|
    Related Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST
    1616.09l1 Organizational.16       | [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1618.09l1 Organizational.45       | [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1619.09l1 Organizational.7       | [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1620.09l1 Organizational.8       | [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1668.12d1 Organizational.67       | [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)\n|\n\n##
    Step 5: Database access & encryption\n\nWhen we created the database in step 3,
    we selected \"Private IP\" and unselected \"*Public IP*\". This restricts traffic
    to the instance only to approved networks. This is important because it forces
    all traffic to be encrypted and authenticated.\n\nMore information on Private
    IP can be found [here](https://cloud.google.com/sql/docs/mysql/private-ip).\n\n###
    Connecting over SSL/TLS\n\nFrom Google:\n\n> \"If you are connecting using private
    IP, configuring SSL/TLS is optional; private services access traffic stays within
    Google's network at all times.\"\n\n<img class=\"lozad tofigure\" alt=\"SSL/TLS
    options\" src=\"//images.ctfassets.net/189dvqdsjh46/5ryAolx2hyoeEyIcCUkAGe/5db42940b5947db917ac706569eee29b/cloudsql-4.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/5ryAolx2hyoeEyIcCUkAGe/5db42940b5947db917ac706569eee29b/cloudsql-4.png?fm=png&fl=png8\"
    /> \n\nYou can see in the screenshot above that all incoming connections must
    use SSL and also that we haven’t set up a certificate yet, which is covered in
    the guide below. For the purposes of this guide, SSL/TLS is not optional. To enforce
    a secure connection, [follow this guide](https://cloud.google.com/sql/docs/mysql/configure-ssl-instance#enforcing-ssl).\n\n|
    Related Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST
    0605.10h1 System.12       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0630.10h2 System.6       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0805.01m1 Organizational.12       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0806.01m2 Organizational.12356       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0805.01m1 Organizational.12       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0806.01m2 Organizational.12356       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0814.01n1 Organizational.12       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0816.01w1 System.1       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0835.09n1 Organizational.1       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n| HITRUST 0859.09m1 Organizational.78       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [Databases: get](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/databases/get)
    \      |\n\n### Enabling Encryption\n\nFrom Google:\n\n> \"Cloud Storage always
    encrypts your data on the server side, before it is written to disk, at no additional
    charge.\"\n\nFor more information on encryption from GCP, please see [this guide](https://cloud.google.com/storage/docs/encryption/).\n\n|
    Related Control(s)     | API Reference     |\n| ---------- | ---------- |\n| HITRUST
    0903.10f1 Organizational.1       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 1132.01v2 System.3       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 1903.06d1 Organizational.3456711       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n\n## Step 6: Backups\n\nIn step 3 when we created our database, we selected
    \"*Automate backups*\" in the \"*Enable auto backups and high availability*\"
    section. These backups are available and should be configured according to your
    internal compliance policy. Using the GCP APIs you can set and retrieve configuration
    information about your instance. \n\nExample response:\n\n~~~javascript\n{\n  \"kind\":
    \"sql#backupRun\",\n  \"id\": long,\n  \"selfLink\": string,\n  \"instance\":
    string,\n  \"description\": string,\n  \"windowStartTime\": datetime,\n  \"status\":
    string,\n  \"type\": string,\n  \"enqueuedTime\": datetime,\n  \"startTime\":
    datetime,\n  \"endTime\": datetime,\n  \"error\": {\n    \"kind\": \"sql#operationError\",\n
    \   \"code\": string,\n    \"message\": string\n  }\n}\n~~~\n\n\n| Related Control(s)
    \    | API Reference     |\n| ---------- | ---------- |\n| HITRUST 1616.09l1 Organizational.16
    \      | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1618.09l1 Organizational.45       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1619.09l1 Organizational.7       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1620.09l1 Organizational.8       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n|
    HITRUST 1668.12d1 Organizational.67       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances),
    [BackupRuns](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/)       |\n\n##
    Step 7: Patching\n\nIn step 3 when we created our database, we selected our maintenance
    window by setting a specific day and time for updates. Using the Instances API,
    we can expect a response like the following:\n\n~~~javascript\n\"maintenanceWindow\":
    {\n  \"kind\": \"sql#maintenanceWindow\",\n  \"hour\": integer,\n  \"day\": integer,\n
    \ \"updateTrack\": string\n}\n~~~\n\n\n| Related Control(s)     | API Reference
    \    |\n| ---------- | ---------- |\n| HITRUST 0701.07a1 Organizational.12       |
    [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 0707.10b2 System.1       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 0708.10b2 System.2       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 0709.10m1 Organizational.1       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 0720.07a1 Organizational.4       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n| HITRUST 0723.07a1 Organizational.8       | [Instances](https://cloud.google.com/sql/docs/postgres/admin-api/v1beta4/instances)
    \      |\n\n## Step 8: Logging & Monitoring\n\nUsing stackdriver in the GCP console,
    we can see that logging and monitoring are on by default and are tracking events
    in the \"operations\" tab. However, this still doesn’t get us all the way to HITRUST
    alignment. For auditing, we’re going to be using [Google Cloud Audit Logging](https://cloud.google.com/logging/docs/audit/).
    \n\n<img class=\"lozad tofigure\" alt=\"Cloud Audit panel\" src=\"//images.ctfassets.net/189dvqdsjh46/44OOyzWyD6U2CmU46su6Uq/5b6c1957b35443c2a4d3848a09d6b5f7/cloudsql-5.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/44OOyzWyD6U2CmU46su6Uq/5b6c1957b35443c2a4d3848a09d6b5f7/cloudsql-5.png?fm=png&fl=png8\"
    />\n\nFortunately Cloud Audit Logging is on by default, and can be accessed at
    [console.cloud.google.com/home/activity](https://console.cloud.google.com/home/activity).
    If you navigate to that page, you’ll see a log of activity, with options in the
    right menu to filter based on certain criteria.\n\n\n<img class=\"lozad tofigure\"
    alt=\"Cloud Audit logging\" src=\"//images.ctfassets.net/189dvqdsjh46/4kEYwdBZVSU8Em6MMW6gmK/473761f76b6f2e3b1b48d9653db8fdba/cloudsql-6.png?fm=png&fl=png8&w=600\"
    data-src=\"//images.ctfassets.net/189dvqdsjh46/4kEYwdBZVSU8Em6MMW6gmK/473761f76b6f2e3b1b48d9653db8fdba/cloudsql-6.png?fm=png&fl=png8\"
    />\n\n| Related Control(s)     | API Reference     |\n| ---------- | ----------
    |\n| HITRUST 1204.09aa1 System.3       | [Stackdriver Monitoring API](https://cloud.google.com/monitoring/api/ref_v3/rest/)
    \      |\n\n## Wrapping up\n\nUsing this guide, developers can ensure their new
    GCP Cloud SQL instance is ready to comply with the HITRUST CSF. Maintaining these
    configurations for all new infrastructure, updating them for new versions of HITRUST
    and providing proof &mdash; a digital papertrail &mdash; is an incredible amount
    of work. Having a partner like Datica can mean the difference between an audit
    taking 4 months, or 4 weeks.\n\nFor more information on Datica’s products and
    services. Check out these helpful links:\n\n- [Cloud Compliance Management System](https://datica.com/ccms)\n-
    [Compliant Kubernetes Service](https://datica.com/cks)"
  :related_entries:
  - :id: 43dQoBKc9OuQuyw8k2SmKO
  - :id: 1s1UlhAhkAwwewk20ugYsW
  :discovery_topic:
    :id: 3wVMp3VrJeiEaWs4wOi4K4
  :cta_ref:
    :id: 6uKml5g9d60cQI2YswoqEE
:discovery_topic:
  :id: 35taSEV8ZqKSQKSiwUyQU4
  :_meta:
    :content_type_id: discover
    :updated_at: '2018-05-25T19:43:52+00:00'
    :created_at: '2017-10-20T03:38:03+00:00'
    :id: 35taSEV8ZqKSQKSiwUyQU4
  :title: HIPAA Compliance on AWS
  :slug: aws-hipaa
  :topic_tag:
  - :id: 1wY9bJEWnCwCyqcE2kCiuy
  - :id: 3ebX0zrnVuYEQOuo2QSSuU
  - :id: V4hQxnsPw44aq8c62mYIe
  :cta_ref:
    :id: 3VsDfgWFYcksgkUq2iyMAQ
  :summary: Understand how AWS and Datica fit together for healthcare products to
    deploy HIPAA compliant workloads in the easiest, most economical, and fastest
    way possible.
  :featured_image:
    :id: 3gflDVmPuoecamYsY6OOSI
  :lead: "Amazon Web Services (AWS) + Datica are a match made in HIPAA compliance
    heaven. Developers can deploy application workloads to their Datica environment
    instead of directly to AWS to eliminate the burden of compliance. With the Datica
    Platform, you get all the great benefits of AWS as the foundation our platform,
    plus Datica automates all DevOps and DevSecOps requirements on the cloud. With
    AWS + Datica, developers can deploy AWS services & workloads in minutes that are
    fully in compliance with HIPAA and HITRUST. \n\nThis resource page is meant to
    help you understand how AWS and Datica work together for makers of digital health
    products to deploy HIPAA compliant workloads in the easiest, most economical,
    and fastest way possible."
  :body: "## What is AWS?\n\n<img src=\"//images.contentful.com/189dvqdsjh46/6jIaQReY80cKKGiCAIUcO8/1bc13adfdccc6214ec207f49120a32b0/aws-logo.png\"
    width=\"200\" class=\"float-right-on-medium\" alt=\"Amazon Web Services (AWS)\">\n\nAmazon
    Web Services (AWS), like Microsoft Azure, Google Cloud, or IBM Softlayer, provides
    infrastructure-as-a-service (IaaS) in the form of a Public Cloud. In a Public
    Cloud, the data centers are owned and managed by the cloud provider but are made
    available through a shared service model to the general public or industry groups.\n\nHealthcare
    developers often prefer public clouds like AWS since pay-as-you-go pricing models
    provide economies of scale and the same levels of security and compliance can
    be achieved today as on private clouds. \n\n## How does the Datica Platform work
    with AWS?\n\nAWS is an Infrastructure as a Service (IaaS) offering. Datica is
    a Platform as a Service (PaaS) company and Datica is an APN Healthcare Partner
    of Amazon AWS. Our PaaS requires an IaaS, and we use AWS by default at all [levels
    of our platform](https://datica.com/pricing/). At the enterprise-level, the Datica
    Platform is also available on multiple clouds including Microsoft Azure, Rackspace,
    or IBM SoftLayer. When it comes down to it, we basically make AWS easier to use
    for the healthcare developer market. It’s less expensive, less time-intensive,
    less risky, and a better experience to use Datica to reap the benefits of AWS
    than for makers of digital health applications to deploy on AWS directly.\n\n<script
    src=\"https://fast.wistia.com/embed/medias/djywh7kkgd.jsonp\" async></script><script
    src=\"https://fast.wistia.com/assets/external/E-v1.js\" async></script><div class=\"wistia_responsive_padding
    group\" style=\"padding:56.25% 0 0 0;position:relative;\"><div class=\"wistia_responsive_wrapper\"
    style=\"height:100%;left:0;position:absolute;top:0;width:100%;\"><div class=\"wistia_embed
    wistia_async_djywh7kkgd videoFoam=true\" style=\"height:100%;position:relative;width:100%\"><div
    class=\"wistia_swatch\" style=\"height:100%;left:0;opacity:0;overflow:hidden;position:absolute;top:0;transition:opacity
    200ms;width:100%;\"><img src=\"https://fast.wistia.com/embed/medias/djywh7kkgd/swatch\"
    style=\"filter:blur(5px);height:100%;object-fit:contain;width:100%;\" alt=\"\"
    onload=\"this.parentNode.style.opacity=1;\" /></div></div></div></div>\n\n###
    Datica supports three types of AWS customers:\n\n1. Those who just want to use
    a multi-tenant cloud. These organizations are Datica customers and are on Datica’s
    AWS account.\n2. Those who need dedicated resources like VMs. These organizations
    are Datica customers and are on Datica’s AWS account.\n3. Those who already have
    their own AWS Account and want to install some of Datica’s technology on it, which
    we call “On-Account” customers. These organizations have both Datica and AWS accounts.\n\n##
    Is AWS HIPAA Compliant?\n\nBeing compliant with the U.S. Health Insurance Portability
    and Accountability Act (HIPAA) is not easily defined. So, is AWS HIPAA compliant?
    Yes! But, to be clear, just because AWS is HIPAA compliant and your application
    runs on AWS doesn’t mean that you are HIPAA compliant too. Here’s where it gets
    complicated. AWS is HIPAA compliant exactly to the extent they are required to
    be at the infrastructure level and as spelled out in their [Business Associate
    Agreement (BAA)](https://datica.com/academy/business-associate-agreements/). \n\n<div
    class=\"callout drop discover--body-callout float-right-on-medium\" markdown=\"1\">\n\n###
    HIPAA Resources\n\n* [Understanding Business Associate Agreement](https://datica.com/academy/business-associate-agreements/)\n*
    [Datica HIPAA Mappings](https://hipaa.datica.com)\n* [Learn the basics of HIPAA](https://datica.com/academy/hipaa-101-a-primer/)\n*
    [Whis is HIPAA Important?](http://content.datica.com/why-is-hipaa-important )\n*
    [Is HIPAA Federal or State?](http://content.datica.com/is-hipaa-federal-or-state)\n*
    [When did HIPAA go into effect?](http://content.datica.com/when-did-hipaa-go-into-effect)\n*
    [Who does HIPAA impact?](http://content.datica.com/who-does-hipaa-impact)\n\n</div>\n\nYou’re
    not building infrastructure though, you are building an application and that adds
    greatly to the list of HIPAA controls that apply to you. In other words, the specific
    subset of the hundreds of HIPAA controls that apply to your company and product
    is a different subset than those that apply to AWS. To be deemed HIPAA compliant,
    and prove that with a HITRUST Certification, you only need to comply with the
    subset of controls that apply in your case.  \n\nThose additional controls vary
    depending on your specific case but, generally, include additional infrastructure-level
    controls, application-level controls and controls at the company level. AWS has
    what they call a shared responsibility model which means when you build your application
    directly on top of AWS, you have to take it the other 90% of the way toward HIPAA
    compliance. \n\nDatica’s platform includes AWS and takes you the rest of the way
    down the path toward full HIPAA compliance at the infrastructure level, and further
    down the path toward compliance at the company and application levels so you can
    focus on the functionality of your application and not on compliance. With Datica,
    you get a compliant platform for deploying and managing critical healthcare applications
    in the cloud.\n\n## Does HIPAA Matter on AWS?\n\nHIPAA kicks in when a digital
    health product handles Protected Health Information (PHI). There are several [different
    categories of PHI](https://datica.com/dhsf/#compliance-does-hipaa-matter), like
    someone’s name, home address, or phone number. When a digital health product stores,
    processes, or transmits PHI, HIPAA asserts rules as to how it should handle a
    multitude of security, privacy, and policy procedures, called “controls”. In HIPAA
    terms, there are physical, technical, and administrative \"safeguards\". Datica
    manages the physical and technical safeguards of HIPAA at the infrastructure-level,
    leaving you to the administrative HIPAA safeguards, which are almost always custom
    to your organization, and a few remaining technical safeguards within your [application
    code](https://datica.com/guide/application-hipaa-compliance/) itself. Thus, Datica
    provides more than two-thirds of what it takes to be HIPAA compliant. Demonstrating
    that a company and its digital health product meets all those controls is how
    it can call itself compliant. \n\n## Understanding AWS Primitives\n\nAWS offers
    about 53 different services, or cloud primitives, to provide a great amount of
    flexibility in order to make it possible for any AWS healthcare developer to bundle
    what they need for their application’s infrastructure. Some well-known examples
    of these services are Amazon EC2, Amazon S3, and Amazon RDS. We bundle a subset
    of those 53 primitives (a majority of the 37 that are [HIPAA-eligible services](https://aws.amazon.com/compliance/hipaa-eligible-services-reference/)
    like CloudTrail (for logging) and S3 (for object storage) together into the Datica
    Platform to address the specific use case of building, maintaining, and running
    a cloud-based digital health application that creates, receives, maintains, or
    transmits PHI in a HIPAA compliant manner. \n\n### Services Included in the Datica
    Platform\n\n![How the datica platform works@2x](//images.contentful.com/189dvqdsjh46/1PDK1PG3dyEIsyWIewYqc8/46057be71944e1972176559bec9e8134/How_the_datica_platform_works_2x.png)\n\n##
    What is the AWS Shared Responsibility Model?\n\nHere’s a high-level summary: The
    AWS shared responsibility model grants excellent security for the security OF
    the cloud but customers (you) are still responsible for security IN the cloud.
    That means, if you were to deploy your application right on AWS instead of the
    Datica Platform, you’d be responsible for setting up and maintaining everything
    beyond the basic cloud infrastructure — and that includes not only the work and
    expense to do that but also the risks of security for everything else. \n\nThe
    cloud infrastructure that AWS is responsible for includes the hardware, software,
    networking, and facilities that run AWS Cloud services.\n\n- Security in the cloud
    (i.e. the customer’s responsibilities) is dependent on the exact application being
    developed and which cloud services are being used by the customer. In general,
    AWS customers are responsible for security, including HIPAA compliance, on all
    of the following:\n- Client-side data encryption & Data Integrity Authentication\n-
    Server-side encryption (file system and/or data)\n- Network traffic protection
    (encryption, integrity, identity)\n- Operating System, network, and firewall configuration\n-
    Platform, applications, identity, and access management\n- Customer Data\n\nCustomers
    of Datica benefit from the fact that our BAA extends the security coverage of
    AWS HIPAA Compliance to pick up responsibility where AWS leaves off. Another way
    to think of it is that AWS takes your infrastructure about 10% of the way toward
    HIPAA Compliance, while if you use the Datica Platform, Datica's [HIPAA mappings](https://hipaa.datica.com)
    take you much further toward 100% compliance. That means you not only eliminate
    the need for the labor, expense, or time of all of the above, but you also pass
    the risk of security onto Datica for everything our much more extensive BAA covers.
    \n\n### Datica’s version of the AWS Shared Responsibility Agreement\n\n<script
    src=\"https://fast.wistia.com/embed/medias/ie7r75wzct.jsonp\" async></script><script
    src=\"https://fast.wistia.com/assets/external/E-v1.js\" async></script><div class=\"wistia_responsive_padding
    group\" style=\"padding:56.25% 0 0 0;position:relative;\"><div class=\"wistia_responsive_wrapper\"
    style=\"height:100%;left:0;position:absolute;top:0;width:100%;\"><div class=\"wistia_embed
    wistia_async_ie7r75wzct seo=false videoFoam=true\" style=\"height:100%;width:100%\">&nbsp;</div></div></div>\n\n##
    Why the Datica Platform on AWS is the Best Option\n\nWhen making the decision
    on whether to build out the requisite infrastructure for your application yourself
    vs. buying the pre-built Datica Platform that already includes AWS, here are the
    major points to keep in mind:\n\n* Building all of this yourself is possible,
    and setting up the individual primitives is, in fact, not the hard part. Ensuring
    compliance while orchestrating the DevOps between all the components in an ongoing
    and compliant basis with each and every deployment IS the hard part. Datica does
    that for you.\n* It’s important to understand this key point: AWS’s shared responsibility
    model grants excellent security for the security OF the cloud but customers (you)
    are still responsible for security IN the cloud. Choosing the Datica Platform
    means Datica picks up that responsibility and the burden of risk where AWS leaves
    off.\n* Making each cloud primitive service HIPAA compliant might be straightforward
    but not if you plan to employ any modern environment paradigms — namely containerization
    and orchestration via Docker or Kubernetes — that require an added level of development
    and maintenance that isn’t achieved by simply making a single primitive compliant.\n\n###
    Typical Healthcare Deployment Process Comparison on AWS Directly vs. Datica\n\n[![Datica
    workflow diagram AWS](//images.contentful.com/189dvqdsjh46/3mxh8k3ZGwiUQce862ga2Q/1e86d891b61168f5f20c0814c8e74da0/Datica_workflow_diagram_AWS_2x.png)](https://assets.contentful.com/189dvqdsjh46/4Qokvx5TskWwCWwGQk0wM/8304e9c351e19a1eb9eb8790f6d269a3/Datica_workflow_diagram.pdf)\n\nIf
    you build everything yourself, you also shoulder the risk. In contrast, Datica’s
    BAA takes on all of the infrastructure-level risk. \nMake life easier with a single
    [BAA from Datica](https://policy.datica.com/#23.-datica-hipaa-business-associate-agreement-(\"baa\")).
    \n\nAligning Business Associate Agreements amongst all technology partners is
    a full-time job. You sign one BAA with Datica to cover the entirety of compliance
    in the cloud, including AWS HIPAA compliance."
  :related_blog:
  - :id: 3hYvku6VcIecmMKYIQeok8
  - :id: 6J5aIYiaVqc0Us8wKaeQI2
  - :id: 4hdDeDpvO0Wy6uU6qkQceU
  - :id: 1xWyIu23sMAEAYA4sC2qk2
  - :id: 4kL9zNbTvyECOaqaykCCEg
  - :id: 4Rg9WxKcCIyeySMoUu0o8A
  - :id: 6hcZMUL5qoc0SyssOiUMCi
  - :id: 1A5n62oXE0SW8sewOkGoso
  - :id: iyXvZMhyKsYSyWgU4cA2M
  :related_academy:
  - :id: 4wVqYkwjzaogEAuecsSsky
  - :id: RT8nZZqxeSOmKQu4Ukys2
  - :id: 5kwY6YTmKIuwCU482esGAQ
  - :id: 2uVitrbH7qy2OyeGwcGEO2
  - :id: 4Tq4oXCp9miK2SeuIAi8yg
  :related_guides:
  - :id: 42vdpyUIlGuIWWGmEumQIy
  - :id: 1L20oQXl3G2cKSm4gg2wuc
  - :id: 2niXNAQR924CwM0YcOeo0C
:cta_ref:
  :id: 6uKml5g9d60cQI2YswoqEE
  :_meta:
    :content_type_id: cta
    :updated_at: '2018-10-04T19:30:52+00:00'
    :created_at: '2018-10-02T19:30:36+00:00'
    :id: 6uKml5g9d60cQI2YswoqEE
  :cta_title: Take the Cloud Configurations Survey
  :cta_desc: We want to make sure the Cloud Compliance Management System has you covered.
    Tell us what other cloud configurations you want to see.
  :cta_label: Take the Survey
  :cta_url: https://datica.com/cloud-compliance-management-system/survey/
  :cta_image:
    :id: 5TDGfDp13aEgs6gO8g2YC2
  :cta_image_small:
    :id: 6KsyCUFBSMsOW6UW2IUW4U
  :cta_color: gray-light
